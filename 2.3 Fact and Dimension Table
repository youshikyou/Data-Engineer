import psycopg2

try: 
    conn = psycopg2.connect("host=127.0.0.1 dbname=studentdb user=student password=student")
except psycopg2.Error as e: 
    print("Error: Could not make connection to the Postgres database")
    print(e)
    
try: 
    cur = conn.cursor()
except psycopg2.Error as e: 
    print("Error: Could not get cursor to the Database")
    print(e)
    
conn.set_session(autocommit=True)

try: 
    cur.execute("CREATE TABLE IF NOT EXISTS customer_transactions(customer_id int,store_id int,spent float);")
except psycopg2.Error as e: 
    print("Error: Issue creating table")
    print (e)
    
#Insert into all tables 
try: 
    cur.execute("INSERT INTO customer_transactions(customer_id,store_id,spent) \
                VALUES(%s,%s,%s)",\
                (1,1,20.50))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
try: 
    cur.execute("INSERT INTO customer_transactions(customer_id,store_id,spent) \
                VALUES(%s,%s,%s)",\
               (2,1,35.21))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
try: 
    cur.execute("CREATE TABLE IF NOT EXISTS items_purchased(customer_id int,item_number int, item_name text);")
except psycopg2.Error as e: 
    print("Error: Issue creating table")
    print (e)
    
try: 
   cur.execute("INSERT INTO items_purchased(customer_id,item_number, item_name) \
                VALUES(%s,%s,%s)" ,\
              (1,1,'Rubber Soul'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
    
try: 
    cur.execute("INSERT INTO items_purchased(customer_id,item_number, item_name) \
                VALUES(%s,%s,%s)", \
               (2,3 ,'Let It Be'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
    
try: 
    cur.execute("CREATE TABLE IF NOT EXISTS customer(customer_id int,name text, rewards text);")
except psycopg2.Error as e: 
    print("Error: Issue creating table")
    print (e)
    
try: 
    cur.execute("INSERT INTO customer(customer_id,name, rewards) \
                VALUES(%s,%s,%s)", \
               (1,'Amanda' ,'Y'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
try: 
    cur.execute("INSERT INTO customer(customer_id,name, rewards) \
                VALUES(%s,%s,%s)", \
               (2,'Toby' ,'N'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
    
try: 
    cur.execute("CREATE TABLE IF NOT EXISTS store(store_id int,state text);")
except psycopg2.Error as e: 
    print("Error: Issue creating table")
    print (e)
    
try: 
    cur.execute("INSERT INTO store(store_id,state) \
                VALUES(%s,%s)", \
               (1,'CA'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)

try: 
    cur.execute("INSERT INTO store(store_id,state) \
                VALUES(%s,%s)", \
               (2,'WA'))
except psycopg2.Error as e: 
    print("Error: Inserting Rows")
    print (e)
    
try: 
    cur.execute("SELECT name, store.store_id, store.state, item_name, customer.rewards \
                                                FROM (((customer_transactions \
                                                JOIN customer ON customer.customer_id=customer_transactions.customer_id)\
                                                JOIN store ON \
                                                customer_transactions.store_id=store.store_id) \
                                                JOIN items_purchased ON \
                                                customer_transactions.customer_id=items_purchased.customer_id)\
                                                WHERE spent > 30 ;")    
except psycopg2.Error as e: 
    print("Error: select *")
    print (e)

row = cur.fetchone()
while row:
   print(row)
   row = cur.fetchone()
   
try: 
  cur.execute("SELECT customer_id, spent\
                FROM customer_transactions\
                WHERE customer_id = 2")
    
    
except psycopg2.Error as e: 
    print("Error: select *")
    print (e)

row = cur.fetchone()
while row:
   print(row)
   row = cur.fetchone()
